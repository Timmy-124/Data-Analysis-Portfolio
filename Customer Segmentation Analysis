--- This analysis seeks to improve customer retention by gaining insights into purchase behaviour and frequency and segmenting customers based on demographics 
--- inorder to develop targeted marketing strategies ultimately enhancing customer loyalty

--- This dataset is gotten from Kaggle 

--- Total Number of Customers
SELECT COUNT(*) AS no_of_customers
FROM customer_data;

--- Customer segmentation by Gender
SELECT gender, COUNT(*) AS no_of_customers
FROM customer_data
GROUP BY gender;

--- Customer Segmentation by Location
SELECT location, COUNT(*) AS no_of_customers
FROM customer_data
GROUP BY location;

--- Customers Most Prefered Product Category by Gender
WITH ranked_products AS (
    SELECT 
        c.gender,
        s.product_category,
        SUM(s.quantity) AS total_quantity,
        RANK() OVER (PARTITION BY c.gender ORDER BY SUM(s.quantity) DESC) AS rank
    FROM 
        customer_data c
    INNER JOIN 
        sales_data s ON c.customerid = s.customerid
    GROUP BY 
        c.gender,
		s.product_category
)
SELECT 
    gender,
    product_category,
    total_quantity
FROM 
    ranked_products
WHERE 
    rank = 1;

--- Customers Most Prefered Product Category by Location
WITH ranked_products AS (
    SELECT 
        c.location,
        s.product_category,
        SUM(s.quantity) AS total_quantity,
        RANK() OVER (PARTITION BY c.location ORDER BY SUM(s.quantity) DESC) AS rank
    FROM 
        customer_data c
    INNER JOIN 
        sales_data s ON c.customerid = s.customerid
    GROUP BY 
        c.location,
		s.product_category
)
SELECT 
    location,
    product_category,
    total_quantity
FROM 
    ranked_products
WHERE 
    rank = 1;

--- Total Amount Spent by Gender
SELECT gender, 
       SUM(price * quantity) AS total_spent
FROM customer_data
INNER JOIN sales_data
ON customer_data.customerid = sales_data.customerid
GROUP BY gender
ORDER BY total spent DESC;

--- Total Sales by Location
SELECT location, 
       SUM(price * quantity) AS total_spent
FROM customer_data
INNER JOIN sales_data
ON customer_data.customerid = sales_data.customerid
GROUP BY location
ORDER BY total_spent DESC;

--- Identifying High Value Customers
SELECT customerid,
       SUM(price) AS total_spent
FROM sales_data
GROUP BY customerid
ORDER BY total_spent DESC;

--- Customer Purchase Behaviour and Frequency
SELECT
    customerid,
    COUNT(*) AS purchase_frequency,
    SUM(price * quantity) AS total_spent,
    AVG(price) AS average_purchase_value
FROM
    sales_data
GROUP BY
    customerid
ORDER BY
    total_spent DESC;

--- Monthly Sales Trend
SELECT MONTH(transaction_date) AS month,
       SUM(price * quantity) AS total_sales
FROM sales_data
GROUP BY MONTH(transaction_date)
ORDER BY total_sales DESC;
